{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","window","setInterval","console","log","setState","name","props","clearInterval","React","Component","App","isClockVisible","clockName","timerOn","timerOff","changeName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAEaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,KAAI,IAAIP,MAAOC,sBAEvB,EAAKO,SAAS,CAAET,MAAM,IAAIC,MAAOC,yBAChC,OAbP,gCAgBE,YAAgD,IAA3BQ,EAA0B,EAA1BA,KACfN,KAAKO,MAAMD,OAASA,GAEtBH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDN,KAAKO,MAAMD,SAnBtE,kCAuBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAzBzB,oBA6BE,WACE,OACE,8CAEG,IACAC,KAAKL,MAAMC,YAlCpB,GAA2Ba,IAAMC,WCG3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,QAAU,WACR,EAAKT,SAAS,CAAEO,gBAAgB,K,EAGlCG,SAAW,WACT,EAAKV,SAAS,CAAEO,gBAAgB,K,EAGlCI,WAAa,WACX,EAAKX,SAAS,CAAEQ,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACCpB,KAAKL,MAAMiB,gBACV,cAAC,EAAD,CAAON,KAAMN,KAAKL,MAAMkB,YAG1B,wBAAQQ,KAAK,SAASC,QAAStB,KAAKc,QAApC,wBAIA,wBAAQO,KAAK,SAASC,QAAStB,KAAKe,SAApC,wBAIA,4CACA,wBAAQM,KAAK,SAASC,QAAStB,KAAKgB,WAApC,6BAGA,iDAAkBhB,KAAKL,MAAMkB,oB,GAtCnBJ,IAAMC,WA4CTC,IC9CfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0b7235d.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component<{ name?: number }> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId?:number;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: { name: number }) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  timerOn = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  timerOff = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n\n        <button type=\"button\" onClick={this.timerOn}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.timerOff}>\n          Hide Clock\n        </button>\n\n        <p>Random name</p>\n        <button type=\"button\" onClick={this.changeName}>\n          Set random name\n        </button>\n        <p>{`clockName: ${this.state.clockName}`}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}